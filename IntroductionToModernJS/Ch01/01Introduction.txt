JS의 특징

1. 인터프리터 언어
- 실행속도가 느릴 것 같지만, 최근 웹브라우저 대부분에는 실행시간에 js 코드를 컴파일하는 JIT 컴파일러가 내장돼 있어 실행속도가 빨라졌다.
- JIT(just in time), 동적 번역, 프로그램을 실제 실행하는 시점에 기계어로 번역하는 컴파일 기법

2. 동적 프로토타입 기반 객체 지향 언어
- C++와 Java가 클래스를 기반 객체지향 언어인 것과 달리, JS는 프로토타입 기반 객체지향 언어이다.
- JS에서는 객체를 생성한 후에도 프로퍼티와 메서드를 동적으로 추가/삭제할 수 있다.

3. 동적 타입 언어
- 프로그램을 실행하는 도중에 변수에 저장되는 데이터 타입이 동적으로 바뀔 수 있다.

4. 함수가 일급객체이다.
- 함수가 객체이며, 함수에 함수를 인수로 넘길 수 있다. 이 특성을 이용하여 고차 함수를 구현할 수 있어 FP(함수형 프로그래밍)가 가능하다.

5. 함수가 클로저를 정의한다.
- 클로저로 변수를 은닉하거나 영속성을 보장하는 등의 다양한 기능을 구현할 수 있다.


JS의 기술적 요소

1. ECMAScript(코어언어) 표준
2. 클라이언트 측 js(웹브라우저에서 동작하는 js)
- Window 인터페이스: js로 브라우저 또는 창을 조작하는 기능 제공
- DOM: js로 HTML 문서의 요소를 제어하는 기능을 제공
- XMLHttpRequest:  서버와 비동기로 통신하는 기능을 제공
- HTML5에 규정된 다양한 API
  - Drag and Drop: Drag and Drop 시 데이터 전달 기능
  - Blob: 이진 데이터를 다루는 기능
  - File: 로컬 파일 시스템을 읽고 쓸 수 있는 기능
  - Web Workers: 프로그램 여러 개를 멀테스레드로 병렬 처리하는 기능
  - Web Storage: 대용량이며 저장 기간에 제한이 없는 데이터를 로컬에 저장하는 기능
  - Indexed Database: 로컬에 키-값 타입의 관계형 데이터베이스 기능을 제공
  - WebSockets: 서버와의 양방향 통신 기능을 제공
  - Geolacation: GPS 등의 위치 정보를 다루는 기능 제공
  - Canvas: 2차원 3차원 그래픽스 기능 제공
3. 서버 측 js
- Node.js: 구글이 개발한 js 실행환경
- Rhino: 오픈소스, 모질라가 관리하는 js 실행환경
- Aptana Jaxer: 압타나가 개발하고 현재는 오픈 소스로 개발되는 js 실행환경