Dining-Philosophers Problem:
5명의 철학자가 원형 식탁에서 밥을 먹는다.
5개의 젓가락 한 짝이 철학자들 사이에 있고
한 젓가락의 양 옆 철학자들이 그 젓가락을 공유한다.
밥을 먹기 위해서는 젓가락 두 개가 필요하다.

젓가락을 상호배제(Mutual Exclusion) 하여 한 번에 한 명만 잡을 수 있게 한다.
dead lock, starvation이 발생할 수 있다.

모두 왼쪽 젓가락을 잡고, 오른쪽 젓가락을 기다린다면 dead lock이 발생한다.

1. 많아야 4명만 동시에 앉게 하면 된다.
2. 동시에 양쪽 젓가락이 모두 사용할 수 있을 떄만 사용한다.
3. 홀수 철학자는 왼쪽을 먼저, 짝수 철학자는 오른쪽을 먼저 짚게 한다.

dead lock은 해결할 수 있지만, starvation은 해결할 수 없다.

Monitor를 이용한 방법
: 3가지 상태로 구분한다. thinking -> hungry -> eating
양 옆의 철학자가 eating 상태가 아닐 때(양 쪽의 젓가락이 사용 가능할 때)만 eating 상태로 전환 가능
(starvation은 해결할 수 없다.)

thread-safe concurrent
1. Transactional Memory
2. OpenMP
3. Functional Programming Language