Example of IPC Systems
Shared Memory: POSIX Shared Memory
- POSIX: Portable Operating System Interface (for UNIX), 운영체제의 표준화 시도
Memory-mapped files를 이용한다. shared memory에 파일을 둔다.

fd = shm_open(name, O_CREAT | ORDWR, 0666); // shared memory 생성 
ftruncate(fd, 4096); // 하나의 정크의 크기를 4096으로 정한다
mmap(0, SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0); // memory-mapped file를 shared memory에 mapping 시킨다

>> Ch3_SharedMemoryExampleProducer.c
>> Ch3_SharedMemoryExampleConsumer.c

Message Passing: Pipes
- Pipes: One of the earliest IPC mechanisms on UNIX systems.
- unidirection? bidirection?
- two-way communication, half-duplex? full-duplex?
- relationship? (parent-child)
- network? (socket)

Ordinary pipe
- parent creates pipe, use it to communicate with a child.
- producer(write), consumer(read)
- unidirectional: only one-way
- two-way communication: use two pipes
Named pipe
- pipe having name

pipe(): System call on UNIX
pipe(int fd []); // length of fd = 2
fd[0] - read end
fd[1] - write end

>> Ch3_PipeExample.c

Sockets: endpoints for communication
IP address로 연결할 컴퓨터를 특정한다.
Port로 연결할 pipe를 특정한다.
IP address와 Port를 묶어서 Socket이라고 한다.

32bit, 64bit, Big endian, Little endian, 등 연결할 컴퓨터와 환경이 다르다면 처리할 게 많다.
RPCs(Remote Procedure Calls, 원격 함수 호출)

Java: 쉬운 소켓 프로그래밍 인터페이스를 제공
Socket class(Server socket, ...): connection-oriented(TCP)
DatagramSocket: connectionless(UDP)
MulticastSocket: multiple recipients
>> Ch3_SocketProgrammingExample.java
