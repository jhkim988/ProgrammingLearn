SJF:
- 미리 CPU 사용 시간을 알 수 없기 때문에 사용 시간을 예측해야한다.
- 지수 평균을 이용한다.
- tn+1 = atn + (1-a)sn
- 선점/비선점 모두 가능하다

SRTF: Shortest Remaining Time First
- 남은 잔여 시간이 짧은 것 우선
- 선점형 SJF

RR: Round Robin
- 시분할 선점형 FCFS
- circular queue
- 시간 간격을 어떻게 주는지에 따라 성능이 달라진다.
- 시간 간격을 너무 길게하면 한 프로세스가 긴 시간동안 점유한다.
- 시간 간격을 너무 짧게하면 dispatch latency가 자주 발생한다.

Priority based:
- 우선순위를 부여하여 우선순위 순서대로 실행한다.
- starvation(기아) 현상이 발생한다.
- aging(노화): 오래 대기 하면 우선순위를 높여준다.

RR + Priority:
- 우선순위가 높은 순서대로
- 우선순위가 같다면 RR

MLQ: Multi Level Queue
- level 별로 Ready Queue를 만든다.

MLFQ: Multi Level Feedback Queue
- 어떤 프로세스가 CPU 시간을 너무 많이 사용하면, 낮은 우선순위 큐로 이동한다.

쓰레드 스케쥴링
- 커널 스레드만 스케쥴링을 해주면 된다.
- 유저 스레드는 스레드 라이브러리가 관리하고 커널 스레드와 매핑만 해서 서비스만 해주면 된다.

Real Time OS: 실시간 운영체제
- 실시간 운영체제: 주어진 시간 내에 task를 완료할 수 있어야 한다.
- soft real time: critical real time process를 non critical real time process보다 먼저 실행해야한다. 
- hard real time: 반드시 주어진 시간 내에 완료돼야 한다.